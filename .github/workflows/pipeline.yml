# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  UnitTest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Requirements
        run: pip install -r requirements.txt

      - name: Unit Test
        run: python -m unittest -v test

  SonarCloud:
      name: SonarCloud
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #- name: SonarCloud Scan
        #  uses: sonarsource/sonarcloud-github-action@master
        #  with:
        #    #projectBaseDir: heiderhengstmann/devopslab
        #    args: >
        #      -Dsonar.organization=heiderhengstmann
        #      -Dsonar.projectKey=heiderhengstmann_devopslab
        #      -Dsonar.python.coverage.reportPaths=/home/runner/work/devopslab/devopslab/coverage.xml
        #      -Dsonar.sources=.
        #      -Dsonar.test.exclusions=tests/**
        #      -Dsonar.tests=tests/
        #      -Dsonar.verbose=true
        #  env:
        #    GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Needed to get PR information, if any
        #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Build:
      needs: [UnitTest,SonarCloud ]
      name: Build
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout Repo
          uses: actions/checkout@v2

        - name: New Relic License
           run: |
              sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile

        - name: Login to Heroku Container registry
          env: 
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:login

        - name: Docker Image & Push Heroku Registry
          env:
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
